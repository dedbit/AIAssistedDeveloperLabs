parameters:
  #The environment name. This will typically be one of the following: Development, Test or Production
  environment: ''
  #The Azure DevOps serviceConnection to be used. 
  serviceConnection: ''
  #Reference to the variable group to be used in deployment
  variableGroup: ''
  #Reference to the environment configuration file. I.e. Dev.json
  targetJson: ''


jobs:
#- deployment: ${{ parameters.environment }}
- deployment: EnvironmentDeployment
  displayName: 'Deploy package to ${{ parameters.environment }}'
  environment: '${{ parameters.environment }}'
  continueOnError: 'true'
  pool:
    vmImage: windows-2019
  variables:
  - ${{ if ne(parameters.variableGroup, '') }}:
    - group: ${{ parameters.variableGroup }}
  strategy:
    runOnce:
      deploy:
        steps:
          - download: none
          
          #Download zip from build output to drop folder (i.e. D:\a\1\Drop)
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: Drop
              patterns: '**/*.zip'
              path: $(Pipeline.Workspace)\Drop\
              
          #Extract files from Drop zip to same directory
          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)\Drop\*.zip' 
              destinationFolder: '$(Pipeline.Workspace)\Drop\Deployment\'
              cleanDestinationFolder: false

          - task: PowerShell@2
            displayName: Show parameters
            inputs:
              targetType: 'inline'
              script: |
                  Write-host "Build.ArtifactStagingDirectory is: $(Build.ArtifactStagingDirectory)"
                  Write-host "(Pipeline.Workspace)\Drop is: $(Pipeline.Workspace)\Drop\"
                  ls
                  ls $(Pipeline.Workspace)\Drop\ -Recurse -Name
          
          - task: AzurePowerShell@4
            displayName: '${{ parameters.packageType }} Deploy'
            inputs:
              azureSubscription: '${{ parameters.serviceConnection }}'
              scriptType: filePath
              scriptPath: '../Drop/Deployment/Install.ps1'
              scriptArguments: '-TargetJson ${{ parameters.targetJson }} -AzureDeployment'
              azurePowerShellVersion: latestVersion
              #Variable group parameters can be injected in scriptArguments like this:
              #scriptArguments: '-TargetJson ${{ parameters.targetJson }} -AzureDeployment -VariableGroupParameters @{"UserName"= "$(UserName)"; "Password" = "$(Password)" }'

